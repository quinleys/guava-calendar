// resources/js/calendar-context-menu.js
function calendarContextMenu() {
  return {
    open: false,
    size: {
      width: 0,
      height: 0
    },
    position: {
      x: 0,
      y: 0
    },
    mountData: {},
    context: null,
    menu: {
      ["x-show"]() {
        return this.open;
      },
      ["x-bind:style"]() {
        return `
                position: absolute;
                z-index: 40;
                top: ${this.position.y}px;
                left: ${this.position.x}px;
                visibility: ${this.open ? "visible" : "hidden"};
                `;
      },
      ["x-on:click.away"]() {
        this.closeMenu();
      }
    },
    init: async function() {
      const menu = this.$el.querySelector('[x-bind="menu"]');
      this.size = {
        width: menu.offsetWidth,
        height: menu.offsetHeight
      };
      this.$el.addEventListener("calendar--open-menu", (event) => this.openMenu(event));
    },
    openMenu: function(event) {
      this.context = event.detail.context;
      this.mountData = event.detail.mountData;
      this.$nextTick(() => {
        const clientY = event.detail.jsEvent.clientY;
        const pageX = event.detail.jsEvent.pageX;
        const pageY = event.detail.jsEvent.pageY;
        if (window.innerWidth < 1024) {
          this.position.x = 0;
          this.position.y = pageY;
          this.open = true;
          return;
        }
        const offsetY = clientY + this.size.height > window.innerHeight ? clientY + this.size.height - window.innerHeight : 0;
        this.position.x = pageX - window.innerWidth / 3 + this.size.width / 2;
        this.position.y = pageY - offsetY;
        this.open = true;
      });
    },
    closeMenu: function() {
      this.open = false;
    }
  };
}
export {
  calendarContextMenu as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vcmVzb3VyY2VzL2pzL2NhbGVuZGFyLWNvbnRleHQtbWVudS5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY2FsZW5kYXJDb250ZXh0TWVudSgpIHtcbiAgICByZXR1cm4ge1xuXG4gICAgICAgIG9wZW46IGZhbHNlLFxuXG4gICAgICAgIHNpemU6IHtcbiAgICAgICAgICAgIHdpZHRoOiAwLFxuICAgICAgICAgICAgaGVpZ2h0OiAwLFxuICAgICAgICB9LFxuICAgICAgICBwb3NpdGlvbjoge1xuICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgIHk6IDAsXG4gICAgICAgIH0sXG4gICAgICAgIG1vdW50RGF0YToge30sXG4gICAgICAgIGNvbnRleHQ6IG51bGwsXG5cbiAgICAgICAgbWVudToge1xuICAgICAgICAgICAgWyd4LXNob3cnXSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5vcGVuXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgWyd4LWJpbmQ6c3R5bGUnXSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICB6LWluZGV4OiA0MDtcbiAgICAgICAgICAgICAgICB0b3A6ICR7dGhpcy5wb3NpdGlvbi55fXB4O1xuICAgICAgICAgICAgICAgIGxlZnQ6ICR7dGhpcy5wb3NpdGlvbi54fXB4O1xuICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6ICR7dGhpcy5vcGVuID8gJ3Zpc2libGUnIDogJ2hpZGRlbid9O1xuICAgICAgICAgICAgICAgIGA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgWyd4LW9uOmNsaWNrLmF3YXknXSgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlTWVudSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGluaXQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lbnUgPSB0aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCdbeC1iaW5kPVwibWVudVwiXScpO1xuICAgICAgICAgICAgdGhpcy5zaXplID0ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiBtZW51Lm9mZnNldFdpZHRoLFxuICAgICAgICAgICAgICAgIGhlaWdodDogbWVudS5vZmZzZXRIZWlnaHQsXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICB0aGlzLiRlbC5hZGRFdmVudExpc3RlbmVyKCdjYWxlbmRhci0tb3Blbi1tZW51JywgKGV2ZW50KSA9PiB0aGlzLm9wZW5NZW51KGV2ZW50KSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgb3Blbk1lbnU6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgdGhpcy5jb250ZXh0ID0gZXZlbnQuZGV0YWlsLmNvbnRleHQ7XG4gICAgICAgICAgICB0aGlzLm1vdW50RGF0YSA9IGV2ZW50LmRldGFpbC5tb3VudERhdGE7XG5cbiAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBjb25zdCBjbGllbnRYID0gZXZlbnQuZGV0YWlsLmpzRXZlbnQuY2xpZW50WDtcbiAgICAgICAgICAgICAgICBjb25zdCBjbGllbnRZID0gZXZlbnQuZGV0YWlsLmpzRXZlbnQuY2xpZW50WTtcbiAgICAgICAgICAgICAgICBjb25zdCBwYWdlWCA9IGV2ZW50LmRldGFpbC5qc0V2ZW50LnBhZ2VYO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgcGFnZVkgPSBldmVudC5kZXRhaWwuanNFdmVudC5wYWdlWTtcblxuICAgICAgICAgICAgICAgIC8vIGlmIG1vYmlsZSBkZXZpY2UsIGRvbid0IGNhbGN1bGF0ZSBvZmZzZXRcbiAgICAgICAgICAgICAgICBpZiAod2luZG93LmlubmVyV2lkdGggPCAxMDI0KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucG9zaXRpb24ueCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucG9zaXRpb24ueSA9IHBhZ2VZO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gY29uc3Qgb2Zmc2V0WCA9IDMwMDtcbiAgICAgICAgICAgICAgICBjb25zdCBvZmZzZXRZID0gY2xpZW50WSArIHRoaXMuc2l6ZS5oZWlnaHQgPiB3aW5kb3cuaW5uZXJIZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgPyBjbGllbnRZICsgdGhpcy5zaXplLmhlaWdodCAtIHdpbmRvdy5pbm5lckhlaWdodFxuICAgICAgICAgICAgICAgICAgICA6IDA7XG5cbiAgICAgICAgICAgICAgICB0aGlzLnBvc2l0aW9uLnggPSAocGFnZVggLSAod2luZG93LmlubmVyV2lkdGggLyAzKSkgKyAodGhpcy5zaXplLndpZHRoIC8gMik7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3NpdGlvbi55ID0gcGFnZVkgLSBvZmZzZXRZO1xuICAgICAgICAgICAgICAgIHRoaXMub3BlbiA9IHRydWU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICBjbG9zZU1lbnU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMub3BlbiA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFlLFNBQVIsc0JBQXVDO0FBQzFDLFNBQU87QUFBQSxJQUVILE1BQU07QUFBQSxJQUVOLE1BQU07QUFBQSxNQUNGLE9BQU87QUFBQSxNQUNQLFFBQVE7QUFBQSxJQUNaO0FBQUEsSUFDQSxVQUFVO0FBQUEsTUFDTixHQUFHO0FBQUEsTUFDSCxHQUFHO0FBQUEsSUFDUDtBQUFBLElBQ0EsV0FBVyxDQUFDO0FBQUEsSUFDWixTQUFTO0FBQUEsSUFFVCxNQUFNO0FBQUEsTUFDRixDQUFDLFFBQVEsSUFBSTtBQUNULGVBQU8sS0FBSztBQUFBLE1BQ2hCO0FBQUEsTUFDQSxDQUFDLGNBQWMsSUFBSTtBQUNmLGVBQU87QUFBQTtBQUFBO0FBQUEsdUJBR0EsS0FBSyxTQUFTLENBQUM7QUFBQSx3QkFDZCxLQUFLLFNBQVMsQ0FBQztBQUFBLDhCQUNULEtBQUssT0FBTyxZQUFZLFFBQVE7QUFBQTtBQUFBLE1BRWxEO0FBQUEsTUFDQSxDQUFDLGlCQUFpQixJQUFJO0FBQ2xCLGFBQUssVUFBVTtBQUFBLE1BQ25CO0FBQUEsSUFDSjtBQUFBLElBRUEsTUFBTSxpQkFBa0I7QUFDcEIsWUFBTSxPQUFPLEtBQUssSUFBSSxjQUFjLGlCQUFpQjtBQUNyRCxXQUFLLE9BQU87QUFBQSxRQUNSLE9BQU8sS0FBSztBQUFBLFFBQ1osUUFBUSxLQUFLO0FBQUEsTUFDakI7QUFFQSxXQUFLLElBQUksaUJBQWlCLHVCQUF1QixDQUFDLFVBQVUsS0FBSyxTQUFTLEtBQUssQ0FBQztBQUFBLElBQ3BGO0FBQUEsSUFFQSxVQUFVLFNBQVUsT0FBTztBQUN2QixXQUFLLFVBQVUsTUFBTSxPQUFPO0FBQzVCLFdBQUssWUFBWSxNQUFNLE9BQU87QUFFOUIsV0FBSyxVQUFVLE1BQU07QUFFakIsY0FBTSxVQUFVLE1BQU0sT0FBTyxRQUFRO0FBQ3JDLGNBQU0sUUFBUSxNQUFNLE9BQU8sUUFBUTtBQUVuQyxjQUFNLFFBQVEsTUFBTSxPQUFPLFFBQVE7QUFHbkMsWUFBSSxPQUFPLGFBQWEsTUFBTTtBQUMxQixlQUFLLFNBQVMsSUFBSTtBQUNsQixlQUFLLFNBQVMsSUFBSTtBQUNsQixlQUFLLE9BQU87QUFDWjtBQUFBLFFBQ0o7QUFHQSxjQUFNLFVBQVUsVUFBVSxLQUFLLEtBQUssU0FBUyxPQUFPLGNBQzlDLFVBQVUsS0FBSyxLQUFLLFNBQVMsT0FBTyxjQUNwQztBQUVOLGFBQUssU0FBUyxJQUFLLFFBQVMsT0FBTyxhQUFhLElBQU8sS0FBSyxLQUFLLFFBQVE7QUFDekUsYUFBSyxTQUFTLElBQUksUUFBUTtBQUMxQixhQUFLLE9BQU87QUFBQSxNQUNoQixDQUFDO0FBQUEsSUFDTDtBQUFBLElBRUEsV0FBVyxXQUFZO0FBQ25CLFdBQUssT0FBTztBQUFBLElBQ2hCO0FBQUEsRUFDSjtBQUNKOyIsCiAgIm5hbWVzIjogW10KfQo=
